{"version":3,"file":"taskpane.js","mappings":"yBAYAA,OAAOC,SAAQ,SAACC,GAmBhB,IAPMC,EACAC,EACAC,EAbAH,EAAKI,OAASN,OAAOO,SAASC,UAChCC,SAASC,eAAe,gBAAgBC,MAAMC,QAAU,OACxDH,SAASC,eAAe,YAAYC,MAAMC,QAAU,OASlDT,EAASH,OAAOa,QAAQC,QAAQC,KAAKZ,OACrCC,EAAUJ,OAAOa,QAAQC,QAAQC,KAAKX,QACtCC,EAAcL,OAAOa,QAAQC,QAAQC,KAAKV,YAqChD,SAAsBW,EAAoBZ,GAA0B,IAAjBC,EAAiB,uDAAH,GAC/D,GAAyB,MAAtBW,GAAyC,MAAXZ,GAAkC,MAAfC,IAIpDY,EAAE,cAAcC,KAAKF,GACrBC,EAAE,eAAeC,KAAKd,GACnBC,EAAYc,OAAS,GAAE,CACtBC,QAAQC,IAAI,8BACZJ,EAAE,0BAA0BK,IAAI,UAAW,SAC3C,IAAI,IAAIC,EAAI,EAAGA,EAAIlB,EAAYc,OAAQI,IAAI,CACvC,IAAIC,EAAanB,EAAYkB,GAC7BN,EAAE,mBAAmBQ,OAAO,OAAQD,EAAWE,KAAO,KAAMF,EAAWG,KAAKC,cAAe,WA/CnGC,CAAa1B,EAAO2B,aAAc1B,EAASC,GAKhB,6HAC3BY,EAAEc,KAAK,CACHC,IAFuB,6HAGvBC,KAAM,MACNC,MAAO,SAASC,EAAIC,EAAOF,GAEvBjB,EAAE,eAAeC,KAAK,eAAiBiB,EAAM,aAAeC,EAAS,YAAcF,MAExFG,MAAK,SAASC,GAuCnB,IAAyBC,EAAUC,EAASC,EAAnBF,EAtCHD,EAAKZ,KAsCQc,EAtCFF,EAAKE,QAAQ,GAAGE,YAsCLD,EAtCkBH,EAAKK,KAAKC,KAuCtE3B,EAAE,gBAAgBC,KAAKqB,GACvBtB,EAAE,eAAeC,KAAKsB,GACtBvB,EAAE,mBAAmBC,KAAKuB,EA1EN,KAkChBrB,QAAQC,IAAI,yCAMhBJ,EAAEc,KAAK,CACHC,IAxCU,qCAyCVC,KAAM,MACNC,MAAO,SAASI,GAEZlB,QAAQC,IAAI,iDACZJ,EAAE,gBAAgBC,KAAK,kCAE5BmB,MAAK,SAASC,GA6BnB,IAAqBZ,EA5BfN,QAAQC,IAAI,+BA4BGK,EA3BHmB,KAAKC,UAAUR,GA4B/BrB,EAAE,gBAAgBC,KAAKQ,UAIzBqB,OAAOC,UAAUpB,YAAc,WAC7B,IAEIL,EADA0B,EAAQC,KAGZ,IAAK3B,EAAI,EAAG0B,GAAS,MAAQ1B,EAAI,EAAGA,IAChC0B,GAAS,KAGb,OAAOA,EAAME,QAAQ,GART,CAAC,IAAK,KAAM,KAAM,KAAM,MAQJ5B,I","sources":["webpack:///./src/taskpane/taskpane.js?"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\n/* global document, Office */\r\n\r\n// Constant values\r\nvar openweathermapAPPID = \"207a941d81bb0d89109c0ce6af589bec\"; // The ID used to connect to the openweathermap API (free account, mime@dialgika.de)\r\nvar celciusUnicode =  \"\\u2103\"; // Unicode for â„ƒ\r\nvar enyconAPI = \"https://10.31.0.32:8000/id/ECN2007\";\r\n\r\nOffice.onReady((info) => {\r\n  if (info.host === Office.HostType.Outlook) {\r\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\r\n    document.getElementById(\"app-body\").style.display = \"flex\";\r\n    \r\n    retrieveMailData();\r\n    retrieveWeatherData(\"saarbruecken\", \"en\", \"metric\");\r\n    retrieveSAPUser();\r\n  }\r\n});\r\n\r\nfunction retrieveMailData(){\r\n  var sender = Office.context.mailbox.item.sender;\r\n  var subject = Office.context.mailbox.item.subject;\r\n  var attachments = Office.context.mailbox.item.attachments;\r\n\r\n  loadMailData(sender.emailAddress, subject, attachments);\r\n}\r\n\r\nfunction retrieveWeatherData(location, language, unit){\r\n  // TODO: cache results of openweathermap to avoid reaching limit\r\n  var urlOpenweathermapAPI = \"https://api.openweathermap.org/data/2.5/weather?q=\"+ location + \"&appid=\" + openweathermapAPPID + \"&units=\" + unit + \"&lang=\" + language;\r\n  $.ajax({\r\n      url: urlOpenweathermapAPI,\r\n      type: 'GET',\r\n      error: function(xhr,status,error){\r\n          //TODO: Proper error handling\r\n          $(\"#weather-id\").text(\"ERROR: xhr: \" + xhr + \", status: \" + status + \", error: \" + error);\r\n      }\r\n  }).done(function(data){\r\n      loadWeatherData(data.name, data.weather[0].description, data.main.temp);\r\n      console.log(\"SOI-LOG: Current weather retrieved\");\r\n  })\r\n}\r\n\r\nfunction retrieveSAPUser(){\r\n  // TODO: Ajax call to SAP webservice        \r\n  $.ajax({\r\n      url: enyconAPI,\r\n      type: 'GET',\r\n      error: function(data){\r\n          //TODO: Proper error handling\r\n          console.log(\"SOI-Log: Could not retrieve data on SAP user,\");\r\n          $(\"#sap-user-id\").text(\"Unable to retrieve SAP user\");\r\n      }\r\n  }).done(function(data){\r\n      console.log(\"SOI-LOG: SAP-User retrieved\");\r\n      loadSAPUser(JSON.stringify(data));\r\n  })\r\n}\r\n\r\nfunction loadMailData(senderEmailAddress, subject, attachments = []){\r\n  if(senderEmailAddress == null || subject == null || attachments == null){\r\n      // TODO: Couldnt retrieve data, display error\r\n      return;\r\n  }\r\n  $(\"#sender-id\").text(senderEmailAddress);\r\n  $(\"#subject-id\").text(subject); \r\n  if(attachments.length > 0){\r\n      console.log(\"SOI-LOG: attachments found\");\r\n      $(\"#attachments-container\").css(\"display\", \"block\");\r\n      for(let i = 0; i < attachments.length; i++){\r\n          var attachment = attachments[i];\r\n          $(\"#attachments-id\").append(\"<li>\" +attachment.name + \", \"+ attachment.size.formatBytes() +\"</li>\")\r\n      }\r\n  }\r\n}\r\n\r\nfunction loadWeatherData(location, weather, temperature){\r\n  $(\"#location-id\").text(location);\r\n  $(\"#weather-id\").text(weather);\r\n  $(\"#temperature-id\").text(temperature + celciusUnicode);\r\n}\r\n\r\nfunction loadSAPUser(name){\r\n  $(\"#sap-user-id\").text(name);\r\n}\r\n\r\n// formatBytes taken from: https://stackoverflow.com/questions/15900485/correct-way-to-convert-size-in-bytes-to-kb-mb-gb-in-javascript\r\nNumber.prototype.formatBytes = function() {\r\n  var units = ['B', 'KB', 'MB', 'GB', 'TB'],\r\n      bytes = this,\r\n      i;\r\n\r\n  for (i = 0; bytes >= 1024 && i < 4; i++) {\r\n      bytes /= 1024;\r\n  }\r\n\r\n  return bytes.toFixed(2) + units[i];\r\n}\r\n\r\nexport async function run() {\r\n  /**\r\n   * Insert your Outlook code here\r\n   */\r\n}\r\n"],"names":["Office","onReady","info","sender","subject","attachments","host","HostType","Outlook","document","getElementById","style","display","context","mailbox","item","senderEmailAddress","$","text","length","console","log","css","i","attachment","append","name","size","formatBytes","loadMailData","emailAddress","ajax","url","type","error","xhr","status","done","data","location","weather","temperature","description","main","temp","JSON","stringify","Number","prototype","bytes","this","toFixed"],"sourceRoot":""}